package com.bopinjia.customer.alipay;import java.io.UnsupportedEncodingException;import java.net.URLEncoder;import android.text.TextUtils;import com.bopinjia.customer.activity.ActivityPay;import com.bopinjia.customer.constants.Constants;import com.bopinjia.customer.util.SignUtils;public class AlipayRequest {    // 签约合作者身份ID    private String partner = Constants.ALIPAY_PARTNER;    // 签约卖家支付宝账号    private String sellerId = Constants.ALIPAY_SELLER;    // 服务器异步通知页面路径   // private String notifyUrl = Constants.ALIPAY_NOTIFY_URL; ActivityPay.ALIPAY_NOTIFY_URL    private String notifyUrl ;            // 服务接口名称， 固定值    private String service = "mobile.securitypay.pay";    // 支付类型， 固定值    private String paymentType = "1";    // 参数编码， 固定值    private String inputCharset = "utf-8";    // 设置未付款交易的超时时间    private String itBPay = "30m";    // extern_token为经过快登授权获取到的alipay_open_id,带上此参数用户将使用授权的账户进行支付    private String externToken = null;    // 支付宝处理完请求后，当前页面跳转到商户指定页面的路径，可空    private String returnUrl = null;    // 调用银行卡支付，需配置此参数，参与签名， 固定值 （需要签约《无线银行卡快捷支付》才能使用）    private String paymethod = null;    // 商户网站唯一订单号    private String outTradeNo;    // 商品名称    private String subject;    // 商品详情    private String body;    // 商品金额    private String totalPrice;    public String getOutTradeNo() {        return outTradeNo;    }    public void setOutTradeNo(String outTradeNo) {        this.outTradeNo = outTradeNo;    }    public String getSubject() {        return subject;    }    public void setSubject(String subject) {        this.subject = subject;    }    public String getBody() {        return body;    }    public void setBody(String body) {        this.body = body;    }    public String getTotalPrice() {        return totalPrice;    }    public void setTotalPrice(String totalPrice) {        this.totalPrice = totalPrice;    }    /**     * 支付宝支付请求     *      * @param outTradeNo     *            订单号     * @param subject     *            商品名称     * @param body     *            商品描述     * @param totalPrice     *            支付价格     */    public AlipayRequest(String outTradeNo, String subject, String body, String totalPrice,String notfyurl) {        this.outTradeNo = outTradeNo;        this.subject = subject;        this.body = body;        this.totalPrice = totalPrice;        this.notifyUrl=notfyurl;    }    /**     * 生成符合支付宝参数规范的订单信息     */    public String generateAlipayOrderInfo() {        // 本地订单信息        String orderInfo = generateOrderInfo();        // 对订单做RSA 签名        String sign = SignUtils.sign(orderInfo, Constants.ALIPAY_RSA_PRIVATE);        try {            // 仅需对sign 做URL编码            sign = URLEncoder.encode(sign, "UTF-8");        } catch (UnsupportedEncodingException e) {            e.printStackTrace();        }        // 支付宝订单信息        return orderInfo + "&sign=\"" + sign + "\"&sign_type=\"RSA\"";        // 生成例        // partner=\"2088101568358171\"&seller_id=\"xxx@alipay.com\"&out_trade_no=\"0819145412-6177\"&subject=\"测试\"&body=\"测试测试\"&total_fee=\"0.01\"        // &notify_url=\"http://notify.msp.hk/notify.htm\"&service=\"mobile.securitypay.pay\"&payment_type=\"1\"&_input_charset=\"utf-8\"&it_b_pay=\"30m\"        // &sign=\"lBBK%2F0w5LOajrMrji7DUgEqNjIhQbidR13GovA5r3TgIbNqv231yC1NksLdw%2Ba3JnfHXoXuet6XNNHtn7VE%2BeCoRO1O%2BR1KugLrQEZMtG5jmJIe2pbjm%2F3kb%2FuGkpG%2BwYQYI51%2BhA3YBbvZHVQBYveBqK%2Bh8mUyb7GM1HxWs9k4%3D\"&sign_type=\"RSA\";    }    /**     * 创建订单信息     */    private String generateOrderInfo() {        StringBuffer orderInfo = new StringBuffer();        // 签约合作者身份ID        orderInfo.append("partner=\"");        orderInfo.append(partner);        orderInfo.append("\"");        // 签约卖家支付宝账号        orderInfo.append("&seller_id=\"");        orderInfo.append(sellerId);        orderInfo.append("\"");        // 商户网站唯一订单号        orderInfo.append("&out_trade_no=\"");        orderInfo.append(outTradeNo);        orderInfo.append("\"");        // 商品名称        orderInfo.append("&subject=\"");        orderInfo.append(subject);        orderInfo.append("\"");        // 商品详情        if (TextUtils.isEmpty(body) == false) {            orderInfo.append("&body=\"");            orderInfo.append(body);            orderInfo.append("\"");        }        // 商品金额        orderInfo.append("&total_fee=\"");        orderInfo.append(totalPrice);        orderInfo.append("\"");        // 服务器异步通知页面路径        orderInfo.append("&notify_url=\"");        orderInfo.append(notifyUrl);        orderInfo.append("\"");        // 服务接口名称， 固定值        orderInfo.append("&service=\"");        orderInfo.append(service);        orderInfo.append("\"");        // 支付类型， 固定值        orderInfo.append("&payment_type=\"");        orderInfo.append(paymentType);        orderInfo.append("\"");        // 参数编码， 固定值        orderInfo.append("&_input_charset=\"");        orderInfo.append(inputCharset);        orderInfo.append("\"");        // 设置未付款交易的超时时间        // 默认30分钟，一旦超时，该笔交易就会自动被关闭。        // 取值范围：1m～15d。        // m-分钟，h-小时，d-天，1c-当天（无论交易何时创建，都在0点关闭）。        // 该参数数值不接受小数点，如1.5h，可转换为90m。        orderInfo.append("&it_b_pay=\"");        orderInfo.append(itBPay);        orderInfo.append("\"");        // extern_token为经过快登授权获取到的alipay_open_id,带上此参数用户将使用授权的账户进行支付        if (TextUtils.isEmpty(externToken) == false) {            orderInfo.append("&extern_token=\"");            orderInfo.append(externToken);            orderInfo.append("\"");        }        // 支付宝处理完请求后，当前页面跳转到商户指定页面的路径，可空        if (TextUtils.isEmpty(returnUrl) == false) {            orderInfo.append("&return_url=\"");            orderInfo.append(returnUrl);            orderInfo.append("\"");        }        // 调用银行卡支付，需配置此参数，参与签名， 固定值 （需要签约《无线银行卡快捷支付》才能使用）        if (TextUtils.isEmpty(paymethod) == false) {            orderInfo.append("&paymethod=\"");            orderInfo.append(paymethod);            orderInfo.append("\"");        }        return orderInfo.toString();    }}